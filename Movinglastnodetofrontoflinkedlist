Move last node to front in a given LinkedList

{1,2,3,4} should be changed to {4,1,2,3}

Make the LinkedList circular and then break the chain before the last node after making its head to point to last node

class Node
{
  int data;
  Node next;

   Node(int data, Node next){
       this.data = data;
       this.next = next;
    }
};
 
class ListUtils
{
   // helper function to print given linked list
  public static void printList(Node head)
  {
    Node ptr = head;
    while(ptr != null)
     {
        System.out.print(ptr.data + "-->");
        ptr = ptr.next;
      }
    System.out.println("null");
    }
   // Function to move last node to the front in a given Linked List
   public static Node rearrange(Node head)
    {
      // proceed only when list is valid
     if(head == null || head.next == null)
        return null;

     Node ptr = head;

    // move to second last node
     while(ptr.next.next != null){
           ptr = ptr.next;
       }
    // Convert the list to circular lsit
      ptr.next.next = head;

     // fix head
     head = ptr.next;

    // break the chain
     ptr.next = null;
    
      return head;
  }

   public static void main(String[] args)
   {
    // input keys
      int[] keys = {1,2,3,4};
   
       Node head = null;
       for(int i = keys.length-1; i >= 0; i--){
           head = new Node(keys[i], head);
       }
      head = rearrange(head);
      printList(head);
    }
}

