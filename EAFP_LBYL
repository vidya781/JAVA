Demonstrating EAFP ( Easier to ask for forgiveness than permission)and LBYL (Look before you leap) procedures in JAVA

public class Main {
   public static void main(String[] args){
     int x = 98;
     int y = 0;
     System.out.println(divideLBYL(x,y));
     System.out.println(divideEAFP(x,y));
    }
   private static int divideLBYL(int x, int y){
      if(y != 0){
         return x/y;
      } else {
         return 0;
       }
     }
    private static int divideEAFP(int x, int y){
      try{
         return x/y;
      } catch(ArithmeticException e){
         return 0;
       }
    }
}


--------------------

import java.util.InputMismatchException;
import java.util.Scanner;

public class Example {
  public static void main(String[] args){
      int result = divide();
      System.out.println(result);
    }
   private static int divide() {
      int x = getInt();
      int y = getInt();
      System.out.println("x is " + x + ", y is " + y);
      return x/y;
   }

   private static int getInt() {
      Scanner s = new Scanner(System.in);
      System.out.println("Please enter an integer");
      while(true) {
         try {
              return s.nextInt();
         } catch(InputMismatchException e) {
         
               // go around again. read past the end of line in the input first 
               s.nextLine();
               System.out.println("Please enter a number using only the digits 0 to 9");
             }
           }
        }
    }

