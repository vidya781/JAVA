The following demonstrates some actions on single linked lists.

public class ListNode<T> {
  public T data;
  public ListNode<T> next;
}

Implementing a basic list API--search, insert, delete. 

Search for a key--

public static ListNode<Integer> searchList(ListNode<Integer> L, int key){
  while(L != null && L.data != key) {
    L = L.next;
  }
  // If key was not present in the list, L will have become null.
  return L;
}

Insert a new node after a specified node:

public static void main insertAfter(ListNode<Integer> node, ListNode<Integer> newNode){
   newNode.next = node.next;
   node.next = newNode;
 }
 
 Delete a node:
 
 // Delete the node immediately following a Node. Assumes aNode is not a tail.
 
 public static void deleteList(ListNode<Integer> aNode){
    aNode.next = aNode.next.next;
 }
 
 
