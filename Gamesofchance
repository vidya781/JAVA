You roll two dice. Each die has six faces, which contain one, two, three, four, five and six spots, respectively.
After the dice have come to rest, the sum of the spots on the two upward faces is calculated. If the sum is 7 or 11 on the first throw, 
you win. If the sum is 2, 3 or 12 on the first throw (called “craps”), you lose (i.e., the “house” wins). If the sum is 4, 5, 6, 8, 9 or 10 on the first throw, that sum becomes your “point.” To win,
you must continue rolling the dice until you “make your point” (i.e., roll that samepoint value). You lose by rolling a 7 before making 
your point.

//Craps class simulates the dice game

import java.util.Random;

public class Craps
{
  // Create Random number generator for use in method rollDice
  
  private static final Random randomNumbers = new Random();
  
  // enumeration with constants that represent the game status
  
  private enum Status{CONTINUE, WON, LOST};
  
  // constants that represnet common rolls of the dice keeping in mind what the sums stand for
  
  private static final int LOSE2 = 2;
  private static final int LOSE3 = 3;
  private static final int WON7 = 7;
  private static final int WON11 = 11;
  private static final int LOSE12 = 12;
  
  // plays one game of craps
  public static void main(String[] args)
  {
    int myPoint = 0; // point if no win/loss on the first roll
    Status gameStatus; // can contain CONTINUE,WON or LOST
    int sumofDice = rollDice();  // first roll of dice
    
    // determine game status and point based on the first roll
    
    switch(sumOfDice)
    {
      case WON7: // win with 7 on the first roll
      case WON11: // win with 11 on the first roll
          gameStatus = Status.WON;
          break;
      case LOSE2: // lose with 2 on the first roll
      case LOSE3: // lose with 3 on the first roll
      case LOSE12: // lose with 12 on first roll
          gameStatus = Status.LOST;
          break;
      default: // did not win/lose
          gameStatus = Status.CONTINUE;  // game is not over
          myPoint = sumofDice; // remember the points
          System.out.printf("Point is %d\n",myPoint);
          break;
        }  // end switch
        // while game is not Complete
       while(gameStatus == Status.CONTINUE)  // not won/lost
       {
         sumofDice = rollDice();
         // determine game status
         if(sumOfDice == myPoint)  //win by making POINT
             gameStatus = Status.WON;
         else
             if(sumOfDice == WON7)  // lose by rolling 7 before point
                 gameStatus = Status.LOST;
         }  // end while
         // display won/lost message
         if(gameStatus == Status.WON)
             System.out.println("Player wins");
         else
             System.out.println("Player loses");
         } // end main
         
         //roll the dice, calculate the sum and display the results
         
         public static int rollDice()
         {
            // pick random die values
            int die1 = 1 + randomNumbers.nextInt(6);
            int die2 = 1 + randomNumbers.nextInt(6);
            int sum = die1 + die2;  // sum of die values
            
            // display results of this roll
            System.out.printf("Player rolled %d + %d = %d\n",die1,die2,sum);
            return sum;  // return sum of dice
            }   // end method rollDice
          }  // end class Craps
      

