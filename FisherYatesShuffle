Shuffle a given array of elements(Fisher Yates shuffle)

Given an array of integers, in place shuffle it. The algo should produce an unbiased permutation; every permutation equally likely.

FY shuffle used to generate random permutations. Takes time proportional to the number of items being shuffled and shuffles them in place. At each iteration algo swaps the element with one chosen at random amongst 
all remaining unvisited elements, including the element itself.

To shuffle an array of n elements
for i from n-1 downto 1 do
     j = random integer such that 0<= j <= i
     exchange a[j] and a[i]

import java.util.Arrays;
import java.util.Random;

class Shuffle
 {
   //Utility function to swap two elements A[i] and A[j] in the array
     private static void swap(int[] A, int i, int j){
         int temp = A[i];
         A[i] = A[j];
         A[j] = temp;
       }
    // function to shuffle an array A[]
     public static void shuffle(int A[])
     {
       // read array from highest index to lowest
       for(int i = A.length-1; i >= 1; i--)
       {
          Random rand = new Random();
          //generate a random number j such that 0<=j<=i
         int j = rand.nextInt(i+1);
   
          // swap current element with randomly generate index
          swap(A, i, j);
         }
      }
   // main function
    public static void main(String[] args)
    {
       int[] A = {1,2,3,4,5,6};
       shuffle(A);
       //print the shuffled array
       System.out.println(Arrays.toString(A));
     }
  }

The time complexity of the above solution is O(n) and aux space = O(1)


But suppose we want to suffle in the opposite direction

To shuffle an array of n elements:
 for i from 0 to n-2 do
     j = random integer such that i <= j < n
     exchange a[i] and a[j]

import java.util.Arrays;
import java.util.Random;

class Shuffle
{
 // Utility function to swap two elements A[i] and A[j] in the array
    private static void swap(int[] A, int i, int j){
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
      }

   // funcion to shuffle an array A[]
   public static void shuffle(int A[])
    {
       // read array from lowest index to highest
      for(int i = 0; i<= A.length-2;i++)
       {
          Random rand = new Random();

           // generate a random number j such that i <= j < n
           int j = i + rand.nextInt(A.length-i);

           // swap current element with randomly generated index
           swap(A, i, j);
        }
    }

// main function

public static void main(String[] args)
{
 int[] A = {1,2,3,4,5,6};
  shuffle(A);
   // print the shuffled array
   System.out.println(Arrays.toString(A));
   }
}

TC: O(n) and aux space : O(1)


     
