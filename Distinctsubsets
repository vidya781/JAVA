Printing all distinct subsets of a given set

Given a set S, generate all distinct subsets of it
find distinct power set of Set S

A power set of any set S is the set of all subsets of S, including the empty set and S itself.

{x,y,x}

Subsets:

{}
{x}
{y}
{x}
{x,y}
{x,x}
{y,x}
{x,y,x}

Distinct subsets in the power set of S:

{ {},{x},{y},{x,y},{x,x},{x,y,x}}

Using Recursion:

Very similar to 0/1 knapsack problem where for each element in set S, we have 2 options
1) Consider that element
2) Dont consider that element

Generate all combinations of subsets by using above logic.
To print only distinct subsets we sort the subset and exclude duplicate elements 
from the subset along with the current element in case 2

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class Util
{
  // recursive function to print all distinct subsets of S
  // S--> input set
  // out--> list to store subset
  //i--> index of next element in set S to be processed
  public static void findpowerset(int[] S, List<Integer> out, int i)
  {
     //if all elems are processed, print the current subset
     if(i < 0){
       System.out.println(out);
       return;
    }
   // include current element in current subset and recurse
    out.add(S[i]);
    findPowerSet(S, out,i-1);

    // Exclude current element in the current subset
    out.remove(out.size()-1); // backtrack

    // remove adj duplicate elements
    while(i > 0 && S[i] == S[i-1]){
       i--;
      }
    // exclude current element in the current subset and recurse
    findPowerSet(S, out, i-1);
   }
  //Program to generate all distinct subsets of given set
  public static void main(String[] args)
  {
    int[] S = {1,3,1};
    // sort the set
    Arrays.sort(S);

   //create an empty list to store elemenents of a subset
   List<Integer> out = new ArrayList<>();
   findPowerSet(S, out, S.length-1);
   }
}

------------------------------------------------------

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

class Util
{
  // Iterative function to print all distinct subsets of S
    public static void findPowerSet(int[] S)
    {
       // N stores total number of subsets
       int N = (int)Math.pow(2,S.length);
       Set<String> set = new HashSet<>();

       // generate each subset one by one
      for(int i = 0; i < N; i++)
        {
           String subset = " ";
            // check every bit of i
            for(int j = 0; j < S.length; j++){
                  // if jth bit of i is set, append S[j] to subset
                  if((i & (1 << j)) != 0) {
                      subset += (S[j]) + " ";
                    }
                }
             // insert the subset into the set
             set.add(subset);
          }
       // print all subsets present in the set
       for(String subset:set){
           System.out.println(subset);
         }
       }
    // program to generate all distinct subsets of a given set
    public static void main(String[] args)
    {
      int[] S = {1,2,1};
      // sort teh set
      Arrays.sort(S);
       findPowerSet(S);
      }
  }
