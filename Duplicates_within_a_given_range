Given an array and a positive number k, check whether the array contains any duplicate elements within range k.If k is more
than the size of the array, solution should check for duplicates in the complete array.

Examples:

A[] = {5,6,8,2,4,6,9}
k = 4

Output: Duplicates found

( element 6 is found repeated at k = 4)

A[] = {5,6,8,2,4,6,9}
k = 2

Output: No duplicates found

( element 6 is repeated at distance 4 which is greater than k=2)

A[] = {1,2,3,2,1}
k = 7

Output: Duplicates found

(element 1 and 2 is repeated at distance 4 and 2 respectively which are both <= k)

Naive solution is to consider every sub-array of size k and check for any duplicates in it.TC is O(n.k^2) since there 
can be n subarrays of size k and each subarray might take O(k^2) for checking the duplicates.

Better way to use hashing.O(n) time and O(n) extra space.Traverse the array and store each element along with its index 
in a map.( ie-element,index) pairs as (key,value) pairs in a map. If any element is already found in the map, check if that
element is repeated within range k using its previous occurence information in the map.

import.java.util.Hashmap;
import java.util.Map;

class HasDuplicates
{
   public static boolean hasDuplicates(int[] arr, int k)
   {
      // stores (element, index) pairs as (key,value) pairs
      Map<Integer,Integer> map = new HashMap<>();
      
      //traverse the array
      for(int i = 0; i < arr.length; i++)
      { 
         // if the current element already exists in the map
           if(map.containsKey(arr[i])) {
               // return true if current element is repeated within a range of k 
               if(i - map.get(arr[i])) <= k) {
                    return true;
                    }
                }
      // store elements along with their indices
      map.put(arr[i],i);
      }
      // reach here when no element is repeated within the range k
      return false;
   }
   public static void main(String[] args)
   {
     int[] arr = { 5,6,8,2,4,6,9};
     int k = 4;
     
     if(hasDuplicates(arr,k)){
         System.out.println("Duplicates found");
      } else {
           System.out.println("No Duplicates found");
           }
        }
    }
     
      
      
