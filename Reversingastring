Reversing a string using implicit stack recursion

class Util
{
   // Utility function to swap two elements A[i] and A[j] in the array
    private static void swap(char[] A, int i, int j){
      char ch = A[i];
      A[i] = A[j];
      A[j] = ch;
    }

// Reverse a string using an implicit stack recursion in Java

   public static void reverse(char[] chars, int i, int j)
   {
     if(i < j)
      {
        // Swap characters at ith and jth index
        swap(chars, i, j);
         //recurse with increasing ith index by position and 
          // decreasing jth index by one position
        reverse(chars, i+1, j-1);
      }
   }

   // Wrapper function
   public static String reverse(String str)
   {
      char[] chars = str.toCharArray();
      reverse(chars, 0, str.length()-1);

      return new String(chars);
    }
   public static void main(String[] args)
   {
     String str = "Reverse me ";
     str = reverse(str);
     System.out.println(str);
    }
 }

