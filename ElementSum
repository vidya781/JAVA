The objective of this program is to compute the sum of the elements of an array in Java. This is adapted from Deitel.

//Computing the sum of elements of an array

public class SumArray
{
  public static void main(String[] args)
  {
    int[] array = {87,68,97,100,83,78,86,91,77,85};
    int total = 0;
    
    // add each element's value to its total
    for(int counter = 0; counter < array.length; counter++)
        total += array[counter];
        System.out.printf("Total of array elements: %d\n",total);
       }  // End main
     }  //end class SumArray
        
// Also demonstrating the enhanced for statement

public class EnhancedForTest
{
  public static void main(String[] args)
  {
    int[] array = {87,68,97,100,83,78,86,91,77,85};
    int total = 0;
    
    //add each element's value to the total
    for(int number: array)
        total += number;
        
    System.out.printf("Total of array elements: %d\n",total);
    } //end main
  } //end class EnhancedForTest


When would one use the enhanced for construct like in the above case?

Note that the enhanced for can only be used to obtain the array elements, not modify them.
If the program needs to modify the elements, use the traditional counter controlled for statement

In this case,totaling the integers in an array requires only access to the element values - the index of each element is irrelevant.
Typical scenario: Whenever code looping through an array does not require access to the counter indicating the index of the current array 
element




