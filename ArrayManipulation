This program demonstrates some methods that may be typically be used in array manipulation. In this case, we consider sorting, copying 
an array, comparison of two arrays,locating a particular element and finally displaying the array.

// Arrays class methods and System.arraycopy.
 import java.util.Arrays;

public class ArrayManipulations
 {
  public static void main( String[] args )
 {
    // sort doubleArray into ascending order
   double[] doubleArray = { 8.4, 9.3, 0.2, 7.9, 3.4 };

   System.out.printf( "\ndoubleArray: " );

  for ( double value : doubleArray )
  System.out.printf( "%.1f ", value );

 // fill 10-element array with 7s
   int[] filledIntArray = new int[ 10 ];

   displayArray( filledIntArray, "filledIntArray" );

  // copy array intArray into array intArrayCopy
   int[] intArray = { 1, 2, 3, 4, 5, 6 };
   int[] intArrayCopy = new int[ intArray.length ];

   displayArray( intArray, "intArray" );
   displayArray( intArrayCopy, "intArrayCopy" );

 // compare intArray and intArrayCopy for equality

   System.out.printf( "\n\nintArray %s intArrayCopy\n",
   ( b ? "==" : "!=" ) );

  // compare intArray and filledIntArray for equality

  System.out.printf( "intArray %s filledIntArray\n",
   ( b ? "==" : "!=" ) );

 // search intArray for the value 5
 
 if ( location >= 0 )
   System.out.printf("Found 5 at element %d in intArray\n", location );
 else
   System.out.println( "5 not found in intArray" );

// search intArray for the value 8763
if ( location >= 0 )
    System.out.printf("Found 8763 at element %d in intArray\n", location );
else
    System.out.println( "8763 not found in intArray" );
} // end main

// output values in each array
public static void displayArray( int[] array, String description )
{
  System.out.printf( "\n%s: ", description );

  for ( int value : array )
     System.out.printf( "%d ", value );
     } // end method displayArray
  } // end class ArrayManipulations
