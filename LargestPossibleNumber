
Find largest number possible from set of given numbers

The numbers should be appended to each other in any order to form the largest number.

Input: {10,68,75,7,21,12}

Output: 77568211210

Note that simply sorting the array in descending order and considering the sorted order is not a possibility here as sorted array {75,68,21,12,10,7}
will result in number 75682112107 < 77568211210

The aim is to write out a custom comparator function for the sorting routine. For two numbers X and Y, the customcomprataor function will
not compare X and Y with each other but it compares XY with YZ and the greater number will come first in sorted order. Hre, XY denotes number formd by appending
Y to X and YX denotes number formed by appending X to Y

X = 15 and Y = 4

XY = 154 and YX = 415

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

class Util
{
   public static void main(String[] args)
   {
     List<String> numbers = Arrays.asList("10","68","97","9","21","12");

      //sort using a custom function object
     Collections.sort(numbers,(a,b)->(b+a).compareTo(a+b));
     //print the sorted sequence
     numbers.stream().forEach(System.out::print);
    }
  }

The TC is O(nlogn) and aux space = O(1)

