Kadane's algo

import java.util.Arrays;

class Kadane
{
    //Function to find contiguous sub array with largest sum in given set of integers
    public static int kadane(int[] A)
    {
       int max = Arrays.stream(A).max().getAsInt();

        if(max < 0) {
            return max;
         }

         int maxsofar = 0;

          int maxendinghere = 0;

         for(int i: A)
         {
           //update maximum sum of subarray ending at index i
           //by adding current element to max sum ending at previous index i-1)
          maxendinghere = maxendinghere + i;

           // if maximum sum is negative, set it to 0 which represenets an emopty sub array
          maxendinghere = Integer.max(maxendinghere, 0);
    
          // update result if current sub array sum found to be >
          maxsofar = Integer.max(maxsofar, maxendinghere);
       }
      return maxsofar;
    }

    // main function
    public static void main(String[] args)
    {
      int[] A = {-8,-3,-6,-2,-5,-4};
      System.out.println("The sum of continuous sub array with the largest sum is " + kadane(A));
    }
 }
---------------------
